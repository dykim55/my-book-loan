<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:task="http://www.springframework.org/schema/task"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:mongo="http://www.springframework.org/schema/data/mongo"
    xsi:schemaLocation="
        http://www.springframework.org/schema/mvc        http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/beans      http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/tx         http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/aop        http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/task       http://www.springframework.org/schema/task/spring-task-3.1.xsd
        http://www.springframework.org/schema/context    http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/data/mongo http://www.springframework.org/schema/data/mongo/spring-mongo-1.1.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->

    <context:annotation-config />
	
	<task:annotation-driven/>
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<mvc:annotation-driven />
	
	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<mvc:resources mapping="/resources/**" location="/resources/" />

    <mvc:interceptors>        
        <bean id="webContentInterceptor" class="org.springframework.web.servlet.mvc.WebContentInterceptor">            
            <property name="cacheSeconds" value="0"/>  
            <property name="useExpiresHeader" value="true"/>
            <property name="useCacheControlHeader" value="true"/>
            <property name="useCacheControlNoStore" value="true"/>
        </bean>
        <bean id="SessionChkInterceptor" class="com.cyberone.report.interceptor.SessionCheckInterceptor" />
    </mvc:interceptors>

    <bean id="jsonView" class="net.sf.json.spring.web.servlet.view.JsonView" >
        <property name="contentType" value="application/json;charset=UTF-8"/>
    </bean>

    <bean id="beanViewResolver" class="org.springframework.web.servlet.view.BeanNameViewResolver">
        <property name="order" value="1" />
    </bean>

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/views/" />
		<property name="suffix" value=".jsp" />
	</bean>

	<bean id="exceptionResolver" class ="com.cyberone.report.exception.JsonExceptionResolver" >
        <property name="order" value = "-1"/>
    </bean>
	
    <!-- multipartResolver -->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver" />
	
	<context:component-scan base-package="com.cyberone.report" />
	
	<!-- Mongo DB -->
    <bean id="mongoProm" class="org.springframework.data.mongodb.core.MongoTemplate">
        <constructor-arg name="mongoDbFactory" ref="mongoDbFactory_prom"/>
    </bean> 

    <bean id="mongoReport" class="org.springframework.data.mongodb.core.MongoTemplate">
        <constructor-arg name="mongoDbFactory" ref="mongoDbFactory_report"/>
    </bean> 
	
    <mongo:mongo host="10.3.2.57" port="27017" id="promDB">
        <mongo:options connections-per-host="8"
                   threads-allowed-to-block-for-connection-multiplier="4"
                   connect-timeout="1000"
                   max-wait-time="1500"
                   auto-connect-retry="true"
                   socket-keep-alive="true"
                   socket-timeout="1500"
                   slave-ok="true"
                   write-number="1"
                   write-timeout="0"
                   write-fsync="true"/>
    </mongo:mongo>

    <mongo:mongo host="10.3.2.57" port="27017" id="reportDB">
        <mongo:options connections-per-host="8"
                   threads-allowed-to-block-for-connection-multiplier="4"
                   connect-timeout="1000"
                   max-wait-time="1500"
                   auto-connect-retry="true"
                   socket-keep-alive="true"
                   socket-timeout="1500"
                   slave-ok="true"
                   write-number="1"
                   write-timeout="0"
                   write-fsync="true"/>
    </mongo:mongo>

    <mongo:db-factory dbname="prom" username="prom" password="prom" mongo-ref="promDB" id="mongoDbFactory_prom" />
    <mongo:db-factory dbname="report" username="prom" password="prom" mongo-ref="reportDB" id="mongoDbFactory_report" />
	
	<!-- Maria DB -->
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="org.mariadb.jdbc.Driver" />
        <property name="url" value="jdbc:mariadb://211.236.179.203:3306/devSame" />
        <!-- property name="url" value="jdbc:mariadb://127.0.0.1:3306/same" / -->
        <property name="username" value="root" />
        <property name="password" value="cyberone" />
        <property name="testOnBorrow" value="true" />
        <property name="validationQuery" value="select 1" />
    </bean>

    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <tx:annotation-driven transaction-manager="transactionManager"/>

    <aop:config>
        <aop:pointcut id="serviceMethods" 
        expression="execution(* com.cyberone.report.*.service.*Service.*(..))" />
        <aop:advisor advice-ref="txAdvice" pointcut-ref="serviceMethods" />
    </aop:config>
        
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="insert*" propagation="REQUIRED" />
            <tx:method name="update*" propagation="REQUIRED" />
            <tx:method name="*" propagation="SUPPORTS" />
        </tx:attributes>
    </tx:advice>
 	
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="mapperLocations" >
            <list>
                <value>classpath:myBatis/**/*.xml</value>
            </list>
        </property>
    </bean>
    
    <bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate" destroy-method="clearCache">
        <constructor-arg index="0" ref="sqlSessionFactory" />
    </bean>
	
</beans>

<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">

<sqlMap namespace="member">

    <typeAlias alias="MemberInfoDTO" type="com.company.book.dto.MemberInfoDTO"/>
    
    <sql id="pagingQueryTop">
    <![CDATA[
        SELECT * FROM (
            SELECT
                ROWNUM AS PAGING_RNUM,
                PAGING_A.*
            FROM
                (
    ]]>
    </sql>
    
    <sql id="pagingQueryBottom">
    <![CDATA[
        ) PAGING_A
        WHERE
            ROWNUM <= #rows# * #page#
        ) PAGING_B
        WHERE PAGING_RNUM > (#rows# * (#page# - 1))
    ]]>
    </sql>

    <sql id="countQueryTop">
        SELECT COUNT(*) as records FROM (
    </sql>

    <sql id="countQueryBottom">
        ) T
    </sql>
    
    <sql id="sqlMemberInfo">
    
    	select 	mi.m_area, mi.m_no, 
			    mi.m_name, mi.m_status, mi.m_gender,
			    mi.m_birth_dt, 
			    mi.m_tel_no, mi.m_cell_no, 
			    mi.m_addr, mi.m_entry_dt,
			    mi.m_dly_cnt, mi.m_cmt, 
			    mi.m_reg_dt, mi.m_reg_id, 
			    mi.m_mdf_dt, mi.m_mdf_id, lh.m_loan_cnt
 		from (
			select 
			    m_area, m_no, 
			    m_name, m_status, m_gender,
			    m_birth_dt, 
			    m_tel_no, m_cell_no, 
			    m_email, m_addr, 
			    m_entry_dt, m_mbr_cd,
			    m_dly_cnt, m_cmt, 
			    m_reg_dt, m_reg_id, 
			    m_mdf_dt, m_mdf_id
			from 
			    member_info 
			where m_area = #m_area# 
			<isNotEmpty prepend="" property="m_sdt">
				<isNotEmpty prepend="and" property="m_edt">
					m_entry_dt between replace(#m_sdt#,'-','')||'000000' and replace(#m_edt#,'-','')||'235959'
				</isNotEmpty>
			</isNotEmpty>
	        <isNotEmpty prepend="and" property="m_no">
	            m_no like '%'||#m_no#
	        </isNotEmpty>
	        <isNotEmpty prepend="and" property="m_name">
	            m_name like '%'||#m_name#
	        </isNotEmpty>
	        <isNotEmpty prepend="and" property="m_status">
	            m_status = #m_status#
	        </isNotEmpty>
	        <isNotEmpty prepend="and" property="m_birth_dt">
	            m_birth_dt = #m_birth_dt#
	        </isNotEmpty>
	        <isNotEmpty prepend="and" property="m_phone_no">
    	        (m_cell_no like '%'||#m_phone_no# or m_tel_no like '%'||#m_phone_no#)
        	</isNotEmpty>
	        
        ) mi, (
			select m_no, count(m_book_no) as m_loan_cnt 
			from loan_history where m_area = #m_area# and m_status='2' 
			group by m_no        
        ) lh
		where mi.m_no = lh.m_no(+)    
	</sql>
	    
    <select id="selectMemberInfo" resultClass="MemberInfoDTO">
        <include refid="pagingQueryTop" />
        <include refid="sqlMemberInfo"/>
        <include refid="pagingQueryBottom"/>
    </select>
    
    <select id="selectMemberInfo-count" parameterClass="MemberInfoDTO" resultClass="MemberInfoDTO">
        <include refid="countQueryTop" />
        <include refid="sqlMemberInfo"/>
        <include refid="countQueryBottom"/>
    </select>
	    
 <!-- 회원 수정 -->
    <update id="updateMemberInfo" parameterClass="MemberInfoDTO">
        update member_info set
        	m_name = #m_name#
        	, m_gender = #m_gender#
        	, m_status = #m_status#
        	, m_birth_dt = #m_birth_dt#
        	, m_calr_tp = #m_calr_tp#
        	, m_tel_no = #m_tel_no#
        	, m_cell_no = #m_cell_no#
        	, m_email = #m_email#
        	, m_addr = #m_addr#
        	, m_cmt = #m_cmt#
			, m_mdf_dt = #m_mdf_dt#
			, m_mdf_id = #m_mdf_id#
        where m_area = #m_area#
            and m_no = #m_no#
			
    </update>
	
    <!-- 회원 등록 -->
    <insert id="insertMemberInfo" parameterClass="MemberInfoDTO">
        insert into member_info (
        	m_area, m_no, m_name, m_status, m_birth_dt, m_gender, 
        	m_calr_tp, m_tel_no, m_cell_no, m_email, m_addr, 
        	m_entry_dt, m_mbr_cd, m_cmt, m_reg_dt, 
        	m_reg_id, m_mdf_dt, m_mdf_id)
        values(
        	#m_area#,     #m_no#,     #m_name#,    #m_status#, #m_birth_dt#, #m_gender#,
        	#m_calr_tp#,  #m_tel_no#, #m_cell_no#, #m_email#,  #m_addr#, 
        	#m_entry_dt#, #m_mbr_cd#, #m_cmt#,    #m_reg_dt#, 
        	#m_reg_id#,   #m_mdf_dt#, #m_mdf_id#)
    </insert>	    
	    
	<select id="getNextMemberNo" resultClass="String">
		select member_m_no_seq.next_value	
    </select>	    

</sqlMap>